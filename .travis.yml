#####################################################################
# This file is part of liFFT.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#####################################################################

language: cpp

os: linux

sudo: false

compiler:
    - gcc
    - clang

branches:
    only:
        - master
        - dev

cache:
    directories:
        - $HOME/dependencies
        - $HOME/.cache/pip
        - $HOME/virtualenv/python2.7/lib/python2.7/site-packages
        - $HOME/.local/lib/python2.7/site-packages

addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
        packages:
            - g++-4.8
            - clang-3.8
            - cmake
            - libfftw3-dev

env:
    global:
        - LIFFT_BOOST=1.55.0
    matrix:
        - LIFFT_BUILD_TYPE=Debug LIFFT_CUDA=OFF LIFFT_CLANG_VER=3.8
        - LIFFT_BUILD_TYPE=Release LIFFT_CUDA=OFF LIFFT_CLANG_VER=3.8

matrix:
    include:
        - os: linux
          compiler: gcc
          env: LIFFT_BUILD_TYPE=Release LIFFT_CUDA=OFF LIFFT_BOOST=1.60.0
        - os: linux
          compiler: clang
          env: LIFFT_BUILD_TYPE=Release LIFFT_CUDA=OFF LIFFT_CLANG_VER=3.5
          addons:
              apt:
                  sources:
                      - ubuntu-toolchain-r-test
                      - llvm-toolchain-precise-3.5
                  packages:
                      - g++-4.8
                      - clang-3.5
                      - cmake
                      - libfftw3-dev
        - os: linux
          compiler: gcc
          env: LIFFT_BUILD_TYPE=Debug LIFFT_CUDA=ON LIFFT_CUDA_VER=7.0-28
          sudo: required
        - os: linux
          compiler: gcc
          env: LIFFT_BUILD_TYPE=Release LIFFT_CUDA=ON LIFFT_CUDA_VER=7.0-28
          sudo: required

before_install:
    - |
        if [ "${LIFFT_CUDA}" == "ON" ]; then
            wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1204/x86_64/cuda-repo-ubuntu1204_${LIFFT_CUDA_VER}_amd64.deb
            sudo dpkg -i cuda-repo-ubuntu1204_${LIFFT_CUDA_VER}_amd64.deb
            sudo apt-get update -qq
        fi

install:
    - if [ "${CXX}" == "g++" ]; then export CXX=g++-4.8; export CC=${CXX/g++/gcc}; export GCOV=${CXX/g++/gcov}; fi
    - if [ "${CXX}" == "clang++" ]; then export CXX=clang++-${LIFFT_CLANG_VER}; export CC=clang-${LIFFT_CLANG_VER}; export GCOV="gcov"; fi
    # CUDA
    - |
        if [ "${LIFFT_CUDA}" == "ON" ]; then
            CUDA_APT_VER=${LIFFT_CUDA_VER%-*}
            CUDA_APT_VER=${CUDA_APT_VER/./-}
            CUDA_PACKAGES="cuda-drivers cuda-core-${CUDA_APT_VER} cuda-cudart-dev-${CUDA_APT_VER} cuda-cufft-dev-${CUDA_APT_VER}"
            echo "Installing ${CUDA_PACKAGES}"
            sudo apt-get install -y ${CUDA_PACKAGES}
            export CUDA_HOME=/usr/local/cuda-${LIFFT_CUDA_VER%%-*}
            export LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
            export PATH=${CUDA_HOME}/bin:${PATH}
        fi
    # Boost
    - export LIFFT_BOOST_FOLDER="boost_${LIFFT_BOOST//./_}"
    - export BOOST_ROOT="$HOME/dependencies/${LIFFT_BOOST_FOLDER}"
    - |
        if [ ! -d "$BOOST_ROOT" ]; then
            wget http://sourceforge.net/projects/boost/files/boost/${LIFFT_BOOST}/${LIFFT_BOOST_FOLDER}.tar.bz2 --output-document=boost.tar.bz2
            mkdir -p $BOOST_ROOT
            tar jxf boost.tar.bz2 --strip-components=1 -C $BOOST_ROOT
            (cd $BOOST_ROOT; ./bootstrap.sh --with-libraries=program_options,filesystem,system,test)
            (cd $BOOST_ROOT; ./b2 --prefix=$BOOST_ROOT -d0 install)
        else echo "Using cached boost version at $BOOST_ROOT"
        fi
    - |
        export LiFFT_COVERAGE=""
        if [ "${LIFFT_CUDA}" == "OFF" ]; then
            pip install --user numpy matplotlib
            # GCov for clang does not work for this folder structure
            if [ "${LIFFT_BUILD_TYPE}" == "Debug" ] && [[ "$CXX" == "g++"* ]]; then
                export LiFFT_COVERAGE="-DLiFFT_ENABLE_COVERAGE=ON"
            fi
        fi
    # Versions
    - $CXX --version
    - if [ "${LIFFT_CUDA}" == "ON" ]; then nvcc --version; fi
    - cmake --version
    - $GCOV --version

script:
    - mkdir build && cd build
    - set -e
    - cmake ../ -DCMAKE_BUILD_TYPE=${LIFFT_BUILD_TYPE} -DLiFFT_ENABLE_CUDA=${LIFFT_CUDA} -DCMAKE_VERBOSE_MAKEFILE=ON ${LiFFT_COVERAGE}
    - make
    - |
        if [ "${LIFFT_CUDA}" == "OFF" ]; then
            export CTEST_OUTPUT_ON_FAILURE=1
            make test
        fi
    - set +e

after_success:
  - if [ "${LIFFT_BUILD_TYPE}" == "Debug" ]; then bash <(curl -s https://codecov.io/bash) -x "${GCOV}"; fi

